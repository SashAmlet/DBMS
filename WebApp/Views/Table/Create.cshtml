@using Shared;
@model WebApp.Models.Table

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Table</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-route-databaseName="@ViewData["databaseName"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div id="columnsContainer">
                <div class="column-item">
                    <input type="text" name="Columns[0].Name" placeholder="Column Name" class="form-control" />
                    <select name="Columns[0].Type" class="form-control">
                        @foreach (var type in Enum.GetValues(typeof(Constants.DataType)))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                    <input type="checkbox" name="Columns[0].IsNullable" /> Is Nullable
                </div>
            </div>

            <button type="button" id="addColumnButton" class="btn btn-secondary">Add Column</button>


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@* 
<div>
    <a asp-action="ViewTables">Back to List</a>
</div> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let columnIndex = 1;

        document.getElementById("addColumnButton").onclick = function () {
            const container = document.getElementById("columnsContainer");
            const newColumn = document.createElement("div");
            newColumn.className = "column-item";
            newColumn.innerHTML = `
                <input type="text" name="Columns[${columnIndex}].Name" placeholder="Column Name" class="form-control" />
                <select name="Columns[${columnIndex}].Type" class="form-control">
                @foreach (var type in Enum.GetValues(typeof(Constants.DataType)))
                {
                                    <option value="@type">@type</option>
                }
                </select>
                <input type="checkbox" name="Columns[${columnIndex}].IsNullable" /> Is Nullable
                <input type="hidden" name="Columns[${columnIndex}].DisplayIndex" value="${columnIndex}" />
            `;
            container.appendChild(newColumn);
            columnIndex++;
        };

    </script>
}
<style>
    .column-item {
        flex: 1 1 200px;
        display: flex;
        align-items: center;
    }
</style>

